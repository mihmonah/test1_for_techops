{
  "defectsList" : [ {
    "title" : "Product defects",
    "status" : "FAILED",
    "defects" : [ {
      "uid" : "364686bed170f521",
      "failure" : {
        "message" : "AssertionError: assert '1 000,99' == '0,99'\n  - 1 000,99\n  + 0,99",
        "stackTrace" : "resource_setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"1303395c-7ca8-4487-adb1-b207732fa086\")>\nparam_test_for_insert_convertation_sum = ('0.99', '0,99')\n\n    @allure.feature('Test: \"insert convertation sum\"')\n    def test_insert_convertation_sum(resource_setup, param_test_for_insert_convertation_sum):\n    \twith pytest.allure.step('find window for inserting conversation sum and clear its content'):\n    \t\ttime.sleep(2)\n    \t\tfilter = resource_setup.find_element_by_class_name('filter-block-line-right input')\n    \t\tfilter.clear()\n    \t\ttime.sleep(2)\n    \twith pytest.allure.step('getting parameters for test and insert it to conversation window'):\n    \t\t(input,expected_output)= param_test_for_insert_convertation_sum\n    \t\tfilter.send_keys(input)\n    \t\tresource_setup.find_element_by_xpath(\"//div[@class='filter-block']//button\").click()\n    \ttime.sleep(3)\n    \twith pytest.allure.step('getting result from \"Вы получите\" window'):\n    \t\tresource_setup.find_element_by_class_name('converter-result')\n    \t\tres = resource_setup.find_element_by_class_name('converter-result')\n    \t\ta=res.text\n    \t\tb=a.split('\\n')[1]\n    \t\tresult = b[:b.find('R')]\n    \twith pytest.allure.step('comparison input and output data'):\n>   \t\tassert result == expected_output\nE     assert '1 000,99' == '0,99'\nE       - 1 000,99\nE       + 0,99\n\ntest_for_insert_convertation_sum.py:26: AssertionError"
      },
      "testCases" : [ {
        "uid" : "2549cd4321081e3a",
        "name" : "test_insert_convertation_sum[min_incorrect]",
        "title" : "Test insert convertation sum [min_incorrect]",
        "time" : {
          "start" : 1487250617606,
          "stop" : 1487250636093,
          "duration" : 18487
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "ae0774cd87a05a26",
      "failure" : {
        "message" : "AssertionError: assert '100 000 000 000,00' == '1 000 000 000 000,00'\n  - 100 000 000 000,00\n  ?  --\n  + 1 000 000 000 000,00\n  ?          ++++",
        "stackTrace" : "resource_setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"6a45c4e6-a7ee-49dc-967e-1fa9c7ed4ea7\")>\nparam_test_for_insert_convertation_sum = ('1000000000000', '1 000 000 000 000,00')\n\n    @allure.feature('Test: \"insert convertation sum\"')\n    def test_insert_convertation_sum(resource_setup, param_test_for_insert_convertation_sum):\n    \twith pytest.allure.step('find window for inserting conversation sum and clear its content'):\n    \t\ttime.sleep(2)\n    \t\tfilter = resource_setup.find_element_by_class_name('filter-block-line-right input')\n    \t\tfilter.clear()\n    \t\ttime.sleep(2)\n    \twith pytest.allure.step('getting parameters for test and insert it to conversation window'):\n    \t\t(input,expected_output)= param_test_for_insert_convertation_sum\n    \t\tfilter.send_keys(input)\n    \t\tresource_setup.find_element_by_xpath(\"//div[@class='filter-block']//button\").click()\n    \ttime.sleep(3)\n    \twith pytest.allure.step('getting result from \"Вы получите\" window'):\n    \t\tresource_setup.find_element_by_class_name('converter-result')\n    \t\tres = resource_setup.find_element_by_class_name('converter-result')\n    \t\ta=res.text\n    \t\tb=a.split('\\n')[1]\n    \t\tresult = b[:b.find('R')]\n    \twith pytest.allure.step('comparison input and output data'):\n>   \t\tassert result == expected_output\nE     assert '100 000 000 000,00' == '1 000 000 000 000,00'\nE       - 100 000 000 000,00\nE       ?  --\nE       + 1 000 000 000 000,00\nE       ?          ++++\n\ntest_for_insert_convertation_sum.py:26: AssertionError"
      },
      "testCases" : [ {
        "uid" : "dd4a7708d8554314",
        "name" : "test_insert_convertation_sum[max_incorrect]",
        "title" : "Test insert convertation sum [max_incorrect]",
        "time" : {
          "start" : 1487250674504,
          "stop" : 1487250692362,
          "duration" : 17858
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "73f2104dfd4f5013",
      "failure" : {
        "message" : "NoSuchElementException: Message: Unable to locate element: .converter-result\n",
        "stackTrace" : "resource_setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"4b0231c7-941c-433d-b93d-cb2f68190113\")>\nparam_test_for_insert_convertation_sum = ('abcd', '0,00')\n\n    @allure.feature('Test: \"insert convertation sum\"')\n    def test_insert_convertation_sum(resource_setup, param_test_for_insert_convertation_sum):\n    \twith pytest.allure.step('find window for inserting conversation sum and clear its content'):\n    \t\ttime.sleep(2)\n    \t\tfilter = resource_setup.find_element_by_class_name('filter-block-line-right input')\n    \t\tfilter.clear()\n    \t\ttime.sleep(2)\n    \twith pytest.allure.step('getting parameters for test and insert it to conversation window'):\n    \t\t(input,expected_output)= param_test_for_insert_convertation_sum\n    \t\tfilter.send_keys(input)\n    \t\tresource_setup.find_element_by_xpath(\"//div[@class='filter-block']//button\").click()\n    \ttime.sleep(3)\n    \twith pytest.allure.step('getting result from \"Вы получите\" window'):\n>   \t\tresource_setup.find_element_by_class_name('converter-result')\n\ntest_for_insert_convertation_sum.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\mike\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:413: in find_element_by_class_name\n    return self.find_element(by=By.CLASS_NAME, value=name)\nc:\\users\\mike\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:752: in find_element\n    'value': value})['value']\nc:\\users\\mike\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:236: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x03549410>\nresponse = {'status': 404, 'value': '{\"error\":\"no such element\",\"message\":\"Unable to locate element: .converter-result\",\"stacktra...nfo>\\\\n   3:   0x6755a7 - <no info>\\\\n   4:   0x66f822 - <no info>\\\\n   5: 0x77b09902 - RtlInitializeExceptionChain\"}'}\n\n    def check_response(self, response):\n        \"\"\"\n            Checks that a JSON response from the WebDriver does not have an error.\n    \n            :Args:\n             - response - The JSON response from the WebDriver server as a dictionary\n               object.\n    \n            :Raises: If the response contains an error message.\n            \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n    \n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            try:\n                                message = message['message']\n                            except TypeError:\n                                message = None\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = WebDriverException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException and 'alert' in value:\n            raise exception_class(message, screen, stacktrace, value['alert'].get('text'))\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .converter-result\n\nc:\\users\\mike\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:192: NoSuchElementException"
      },
      "testCases" : [ {
        "uid" : "508daec447bf1cbd",
        "name" : "test_insert_convertation_sum[incorrect_data_with_incorrect_answer]",
        "title" : "Test insert convertation sum [incorrect_data_with_incorrect_answer]",
        "time" : {
          "start" : 1487250711071,
          "stop" : 1487250765092,
          "duration" : 54021
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "6f29770060e86fa5",
      "failure" : {
        "message" : "AssertionError: assert 0",
        "stackTrace" : "resource_setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"88a43914-a069-438f-a894-b8035d63acd0\")>\nparam_test_for_from_to_filter = ('31.12.2005', '31.12.2002')\n\n    @allure.feature('Test: \"input data to filters\"')\n    def test_input_data_to_filters(resource_setup,param_test_for_from_to_filter):\n    \twith pytest.allure.step('getting parameters for test'):\n    \t\t(data_from, data_to) = param_test_for_from_to_filter\n    \twith pytest.allure.step('input data from'):\n    \t\tfilter_from = resource_setup.find_element_by_name('filter-datepicker-details-from')\n    \t\tfilter_from.clear()\n    \t\tfilter_from.send_keys(data_from)\n    \t\tfilter_from.send_keys(Keys.RETURN)\n    \twith pytest.allure.step('input data to'):\n    \t\tfilter_to = resource_setup.find_element_by_name('filter-datepicker-details-to')\n    \t\tfilter_to.clear()\n    \t\tfilter_to.send_keys(data_to)\n    \t\tfilter_to.send_keys(Keys.RETURN)\n    \twith pytest.allure.step('click \"Показать\" button'):\n    \t\tresource_setup.find_element_by_xpath(\"//div[@class='rates-details-period-datepicker-line']//button\").click()\n    \ttime.sleep(4)\n    \twith pytest.allure.step('checking results of click \"Показать\" button'):\n    \t\ttry:\n    \t\t\tresource_setup.find_element_by_xpath(\"//div[@class='jqplot-axis jqplot-xaxis']//div\")\n    \t\texcept Exception as e:\n    \t\t\tprint(\"Input data is incorrect\",format(e))\n>   \t\t\tassert 0\nE      assert 0\n\ntest_from_to_filter.py:29: AssertionError"
      },
      "testCases" : [ {
        "uid" : "f19b4454e694485",
        "name" : "test_input_data_to_filters[incorrect_dates]",
        "title" : "Test input data to filters [incorrect_dates]",
        "time" : {
          "start" : 1487250802004,
          "stop" : 1487250851329,
          "duration" : 49325
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      }, {
        "uid" : "1e2a45abed8e52de",
        "name" : "test_input_data_to_filters[same_from_to_dates]",
        "title" : "Test input data to filters [same_from_to_dates]",
        "time" : {
          "start" : 1487250887879,
          "stop" : 1487250935909,
          "duration" : 48030
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      }, {
        "uid" : "3d76ddc8ae35ebd",
        "name" : "test_input_data_to_filters[correct_dates_no_data]",
        "title" : "Test input data to filters [correct_dates_no_data]",
        "time" : {
          "start" : 1487250936023,
          "stop" : 1487250983528,
          "duration" : 47505
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    } ]
  }, {
    "title" : "Test defects",
    "status" : "BROKEN",
    "defects" : [ ]
  } ]
}