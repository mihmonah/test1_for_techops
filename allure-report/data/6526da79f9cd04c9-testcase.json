{
  "uid" : "6526da79f9cd04c9",
  "name" : "test_insert_convertation_sum[min_incorrect]",
  "title" : "Test insert convertation sum [min_incorrect]",
  "time" : {
    "start" : 1487851156063,
    "stop" : 1487851203471,
    "duration" : 47408
  },
  "summary" : {
    "attachments" : 1,
    "steps" : 4
  },
  "failure" : {
    "message" : "NoSuchElementException: Message: Unable to locate element: .converter-result\n",
    "stackTrace" : "resource_setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"900f66fe-92b4-4b73-a4ec-2bb78fe229ab\")>\nparam_test_for_insert_convertation_sum = ('0.99', '0,99')\n\n    @allure.feature('Test: \"insert convertation sum\"')\n    def test_insert_convertation_sum(resource_setup, param_test_for_insert_convertation_sum):\n        (sum_in, sum_out) = param_test_for_insert_convertation_sum\n>       assert LeftMenu.check_insert_convertation_sum(resource_setup, sum_in, sum_out)\n\ntest_for_insert_convertation_sum.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmenues.py:26: in check_insert_convertation_sum\n    b = resource.find_element(*LeftMenuLocators.RESULT).text.split('\\n')[1]\nc:\\users\\mike\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:752: in find_element\n    'value': value})['value']\nc:\\users\\mike\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:236: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0350C530>\nresponse = {'status': 404, 'value': '{\"error\":\"no such element\",\"message\":\"Unable to locate element: .converter-result\",\"stacktra...nfo>\\\\n   3:   0x6755a7 - <no info>\\\\n   4:   0x66f822 - <no info>\\\\n   5: 0x77449902 - RtlInitializeExceptionChain\"}'}\n\n    def check_response(self, response):\n        \"\"\"\n            Checks that a JSON response from the WebDriver does not have an error.\n    \n            :Args:\n             - response - The JSON response from the WebDriver server as a dictionary\n               object.\n    \n            :Raises: If the response contains an error message.\n            \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n    \n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            try:\n                                message = message['message']\n                            except TypeError:\n                                message = None\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = WebDriverException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException and 'alert' in value:\n            raise exception_class(message, screen, stacktrace, value['alert'].get('text'))\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .converter-result\n\nc:\\users\\mike\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:192: NoSuchElementException"
  },
  "description" : null,
  "severity" : "NORMAL",
  "status" : "FAILED",
  "suite" : {
    "uid" : "10abbdcc4a358ac9",
    "name" : "test_for_find_currency",
    "title" : "Test for find currency"
  },
  "steps" : [ {
    "name" : "open Firefox webdriver and connect to converter site",
    "title" : "open Firefox webdriver and connect to converter site",
    "time" : {
      "start" : 1487851156064,
      "stop" : 1487851165607,
      "duration" : 9543
    },
    "summary" : {
      "attachments" : 0,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ ],
    "steps" : [ ]
  }, {
    "name" : "find window for inserting conversation sum and clear its content",
    "title" : "find window for inserting conversation sum and clear its content",
    "time" : {
      "start" : 1487851165615,
      "stop" : 1487851169875,
      "duration" : 4260
    },
    "summary" : {
      "attachments" : 0,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ ],
    "steps" : [ ]
  }, {
    "name" : "getting parameters for test and insert it to conversation window",
    "title" : "getting parameters for test and insert it to conversation window",
    "time" : {
      "start" : 1487851169875,
      "stop" : 1487851173322,
      "duration" : 3447
    },
    "summary" : {
      "attachments" : 0,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ ],
    "steps" : [ ]
  }, {
    "name" : "getting result from \"Вы получите\" window",
    "title" : "getting result from \"Вы получите\" window",
    "time" : {
      "start" : 1487851173322,
      "stop" : 1487851203378,
      "duration" : 30056
    },
    "summary" : {
      "attachments" : 0,
      "steps" : 0
    },
    "status" : "FAILED",
    "attachments" : [ ],
    "steps" : [ ]
  } ],
  "attachments" : [ {
    "title" : "Captured stdout setup",
    "source" : "54c1faa3-dcab-4646-9998-f47940bdc679-attachment.txt",
    "type" : "text/plain",
    "size" : 27,
    "uid" : "9c53f8f4a911b78"
  } ],
  "issues" : [ ],
  "testIds" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Test: \"insert convertation sum\""
  }, {
    "name" : "host",
    "value" : "computer"
  }, {
    "name" : "thread",
    "value" : "4608-MainThread"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "suite-name",
    "value" : "test_for_find_currency"
  } ],
  "parameters" : [ ]
}